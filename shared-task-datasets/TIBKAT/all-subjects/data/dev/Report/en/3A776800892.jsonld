{
    "@graph": [
        {
            "@id": "gnd:120012162",
            "sameAs": "Hirschfeld, Robert"
        },
        {
            "@id": "gnd:131765612",
            "sameAs": "Haupt, Michael"
        },
        {
            "@id": "gnd:4125677-3",
            "sameAs": "Dynamische Optimierung"
        },
        {
            "@id": "gnd:4172311-9",
            "sameAs": "Objektorientierte Programmiersprache"
        },
        {
            "@id": "gnd:4541748-9",
            "sameAs": "Java Virtual Machine"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A776800892",
            "@type": "bibo:Report",
            "P1053": "Online-Ressource (PDF-Datei: 1.599 KB, 163 S.)",
            "http://purl.org/dc/elements/1.1/creator": [
                "Treffer, Arian",
                "Pape, Tobias"
            ],
            "description": "graph. Darst.",
            "identifier": [
                "(ppn)776800892",
                "(firstid)GBV:776800892"
            ],
            "publisher": "Univ.-Verl.",
            "subject": [
                "(classificationName=linseach:mapping)inf",
                "(classificationName=bk, id=106418122)54.51 - Programmiermethodik",
                "(classificationName=bk, id=106418904)54.54 - Betriebssysteme",
                "(classificationName=ddc)005.133",
                "(classificationName=ddc-dbn)004",
                "(classificationName=ddc)005.117"
            ],
            "title": "Extending a Java virtual machine to dynamic object-oriented languages",
            "abstract": "There are two common approaches to implement a virtual machine (VM) for a dynamic object-oriented language. On the one hand, it can be implemented in a C-like language for best performance and maximum control over the resulting executable. On the other hand, it can be implemented in a language such as Java that allows for higher-level abstractions. These abstractions, such as proper object-oriented modularization, automatic memory management, or interfaces, are missing in C-like languages but they can simplify the implementation of prevalent but complex concepts in VMs, such as garbage collectors (GCs) or just-in-time compilers (JITs). Yet, the implementation of a dynamic object-oriented language in Java eventually results in two VMs on top of each other (double stack), which impedes performance. For statically typed languages, the Maxine VM solves this problem; it is written in Java but can be executed without a Java virtual machine (JVM). However, it is currently not possible to execute dynamic object-oriented languages in Maxine. This work presents an approach to bringing object models and execution models of dynamic object-oriented languages to the Maxine VM and the application of this approach to Squeak/Smalltalk. The representation of objects in and the execution of dynamic object-oriented languages pose certain challenges to the Maxine VM that lacks certain variation points necessary to enable an effortless and straightforward implementation of dynamic object-oriented languages' execution models. The implementation of Squeak/Smalltalk in Maxine as a feasibility study is to unveil such missing variation points.",
            "contributor": "gnd:131765612",
            "dcterms:contributor": "Technische Informationsbibliothek (TIB)",
            "creator": "gnd:120012162",
            "issued": "2013",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "open access",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": [
                {
                    "@id": "gnd:4541748-9"
                },
                {
                    "@id": "gnd:4125677-3"
                },
                {
                    "@id": "gnd:4172311-9"
                }
            ],
            "volume": "82",
            "P30128": "Technische Berichte des Hasso-Plattner-Instituts f\u00fcr Softwaresystemtechnik an der Universit\u00e4t Potsdam",
            "P60163": "Potsdam"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "license": "http://purl.org/dc/terms/license",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "title": "http://purl.org/dc/elements/1.1/title",
        "volume": "http://purl.org/ontology/bibo/volume",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "P30128": "http://www.rdaregistry.info/Elements/m/#P30128",
        "contributor": {
            "@id": "http://purl.org/dc/terms/contributor",
            "@type": "@id"
        },
        "creator": {
            "@id": "http://purl.org/dc/terms/creator",
            "@type": "@id"
        },
        "issued": "http://purl.org/dc/terms/issued",
        "description": "http://purl.org/dc/elements/1.1/description",
        "abstract": "http://purl.org/dc/terms/abstract",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}